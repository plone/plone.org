version: '3.3'

services:

  frontend:
    image: ghcr.io/plone/ploneorg-frontend:latest
    environment:
      RAZZLE_INTERNAL_API_PATH: http://testing-plone-org_backend:8080/Plone
    depends_on:
      - backend
    networks:
      - public
      - testing_ploneorg
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == app
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.constraint-label=public
        # Middlewares
        - traefik.http.middlewares.testing_ploneorg-frontend-auth.basicauth.users=ploneorg:$$2y$$05$$QuAxsLqKl7ltm6Qv4wOOw./2pK5VeVSBSllAJbdb4dKnFxWhFFLze

        # Services
        - traefik.http.services.testing_ploneorg-frontend.loadbalancer.server.port=3000
        # Routers
        - traefik.http.routers.testing_ploneorg-frontend.rule=Host(`testing.plone.org`)
        - traefik.http.routers.testing_ploneorg-frontend.entrypoints=https
        - traefik.http.routers.testing_ploneorg-frontend.tls=true
        - traefik.http.routers.testing_ploneorg-frontend.tls.certresolver=le
        - traefik.http.routers.testing_ploneorg-frontend.service=testing_ploneorg-frontend
        - traefik.http.routers.testing_ploneorg-frontend.middlewares=gzip,testing_ploneorg-frontend-auth

  backend:
    image: ghcr.io/plone/ploneorg-backend:latest
    environment:
      RELSTORAGE_DSN: "dbname='${DB_NAME:-plone}' user='${DB_USER:-plone}' host='${DB_HOST:-db}' port='${DB_PORT:-5432}' password='${DB_PASSWORD:-plone}'"
    depends_on:
      - db
    networks:
      - public
      - testing_ploneorg
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == app
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.constraint-label=public
        # Services
        - traefik.http.services.testing_ploneorg-backend.loadbalancer.server.port=8080
        # Middlewares
        ### Authentication
        - traefik.http.middlewares.testing_ploneorg-backend-auth.basicauth.users=ploneorg:$$2y$$05$$QuAxsLqKl7ltm6Qv4wOOw./2pK5VeVSBSllAJbdb4dKnFxWhFFLze
        ### backend ++api++ VHM
        - "traefik.http.middlewares.testing_ploneorg-vhm-cleanup.replacepathregex.regex=^/((\\+\\+api\\+\\+/){1,})($$|.*)"
        - "traefik.http.middlewares.testing_ploneorg-vhm-cleanup.replacepathregex.replacement=/VirtualHostBase/https/testing.plone.org/Plone/++api++/VirtualHostRoot/$$3"
        - "traefik.http.middlewares.testing_ploneorg-vhm.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
        - "traefik.http.middlewares.testing_ploneorg-vhm.replacepathregex.replacement=/VirtualHostBase/https/testing.plone.org/Plone/++api++/VirtualHostRoot/$$1"
        ### backend /ClassicUI VHM
        - "traefik.http.middlewares.testing_ploneorg-vhm-classic.replacepathregex.regex=^/ClassicUI($$|/.*)"
        - "traefik.http.middlewares.testing_ploneorg-vhm-classic.replacepathregex.replacement=/VirtualHostBase/https/testing.plone.org/Plone/VirtualHostRoot/_vh_ClassicUI/$$1"
        # Routers
        ## testing.plone.org ++api++
        - traefik.http.routers.testing_ploneorg-backend.rule=Host(`testing.plone.org`) && (PathPrefix(`/++api++`))
        - traefik.http.routers.testing_ploneorg-backend.entrypoints=https
        - traefik.http.routers.testing_ploneorg-backend.tls=true
        - traefik.http.routers.testing_ploneorg-backend.service=testing_ploneorg-backend
        - traefik.http.routers.testing_ploneorg-backend.middlewares=gzip,testing_ploneorg-vhm-cleanup,testing_ploneorg-vhm
        ### testing.plone.org /ClassicUI - protected with basic auth (prevent SEOs from crawl it)
        - traefik.http.routers.testing_ploneorg-classicui.rule=Host(`testing.plone.org`) && (PathPrefix(`/ClassicUI`))
        - traefik.http.routers.testing_ploneorg-classicui.entrypoints=https
        - traefik.http.routers.testing_ploneorg-classicui.tls=true
        - traefik.http.routers.testing_ploneorg-classicui.service=testing_ploneorg-backend
        - traefik.http.routers.testing_ploneorg-classicui.middlewares=gzip,testing_ploneorg-backend-auth,testing_ploneorg-vhm-classic

networks:
  public:
    external: true
    driver: overlay
  testing_ploneorg:
    driver: overlay
